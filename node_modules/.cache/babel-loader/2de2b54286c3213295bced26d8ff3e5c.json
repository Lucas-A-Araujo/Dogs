{"ast":null,"code":"var _jsxFileName = \"/home/lucas/node_projects/dogs-final/src/Components/User/UserStats.js\";\nimport React from 'react';\nimport Head from '../Helper/Head';\nimport useFetch from '../../Hooks/useFetch';\nimport { STATS_GET } from '../../Api';\nimport Loading from '../Helper/Loading';\nimport Error from '../Helper/Error';\nconst UserStatsGraphs = React.lazy(() => import('./UserStatsGraphs'));\n\nconst UserStats = () => {\n  const {\n    data,\n    error,\n    loading,\n    request\n  } = useFetch();\n  React.useEffect(() => {\n    async function getData() {\n      const {\n        url,\n        options\n      } = STATS_GET();\n      await request(url, options);\n    }\n\n    getData();\n  }, [request]);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  });\n  if (data) return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Head, {\n    title: \"Estat\\xEDsticas\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(UserStatsGraphs, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }));else return null;\n};\n\nexport default UserStats;","map":{"version":3,"sources":["/home/lucas/node_projects/dogs-final/src/Components/User/UserStats.js"],"names":["React","Head","useFetch","STATS_GET","Loading","Error","UserStatsGraphs","lazy","UserStats","data","error","loading","request","useEffect","getData","url","options"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,MAAMC,eAAe,GAAGN,KAAK,CAACO,IAAN,CAAW,MAAM,OAAO,mBAAP,CAAjB,CAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAoCV,QAAQ,EAAlD;AAEAF,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AACpB,mBAAeC,OAAf,GAAyB;AACvB,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA;AAAP,UAAmBb,SAAS,EAAlC;AACA,YAAMS,OAAO,CAACG,GAAD,EAAMC,OAAN,CAAb;AACD;;AACDF,IAAAA,OAAO;AACR,GAND,EAMG,CAACF,OAAD,CANH;AAQA,MAAID,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,MAAID,IAAJ,EACE,oBACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,KAOK,OAAO,IAAP;AACN,CArBD;;AAuBA,eAAeD,SAAf","sourcesContent":["import React from 'react';\nimport Head from '../Helper/Head';\nimport useFetch from '../../Hooks/useFetch';\nimport { STATS_GET } from '../../Api';\nimport Loading from '../Helper/Loading';\nimport Error from '../Helper/Error';\nconst UserStatsGraphs = React.lazy(() => import('./UserStatsGraphs'));\n\nconst UserStats = () => {\n  const { data, error, loading, request } = useFetch();\n\n  React.useEffect(() => {\n    async function getData() {\n      const { url, options } = STATS_GET();\n      await request(url, options);\n    }\n    getData();\n  }, [request]);\n\n  if (loading) return <Loading />;\n  if (error) return <Error error={error} />;\n  if (data)\n    return (\n      <React.Suspense fallback={<div></div>}>\n        <Head title=\"EstatÃ­sticas\" />\n        <UserStatsGraphs data={data} />\n      </React.Suspense>\n    );\n  else return null;\n};\n\nexport default UserStats;\n"]},"metadata":{},"sourceType":"module"}