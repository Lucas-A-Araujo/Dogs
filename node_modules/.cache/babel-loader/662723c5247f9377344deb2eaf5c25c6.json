{"ast":null,"code":"var _jsxFileName = \"/home/lucas/node_projects/dogs-final/src/UserContext.js\";\nimport React from 'react';\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from './Api';\nimport { useNavigate } from 'react-router-dom';\nexport const UserContext = React.createContext();\nexport const UserStorage = ({\n  children\n}) => {\n  const [data, setData] = React.useState(null);\n  const [login, setLogin] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const navigate = useNavigate();\n  const userLogout = React.useCallback(async function () {\n    setData(null);\n    setError(null);\n    setLoading(false);\n    setLogin(false);\n    window.localStorage.removeItem('token');\n    navigate('/login');\n  }, [navigate]);\n\n  async function getUser(token) {\n    const {\n      url,\n      options\n    } = USER_GET(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData(json);\n    setLogin(true);\n  }\n\n  async function userLogin(username, password) {\n    try {\n      setError(null);\n      setLoading(true);\n      const {\n        url,\n        options\n      } = TOKEN_POST({\n        username,\n        password\n      });\n      const tokenRes = await fetch(url, options);\n      if (!tokenRes.ok) throw new Error(`Error: ${tokenRes.statusText}`);\n      const {\n        token\n      } = await tokenRes.json();\n      window.localStorage.setItem('token', token);\n      await getUser(token);\n      navigate('/conta');\n    } catch (err) {\n      setError(err.message);\n      setLogin(false);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n\n      if (token) {\n        try {\n          setError(null);\n          setLoading(true);\n          const {\n            url,\n            options\n          } = TOKEN_VALIDATE_POST(token);\n          const response = await fetch(url, options);\n          if (!response.ok) throw new Error('Token inválido');\n          await getUser(token);\n        } catch (err) {\n          userLogout();\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        setLogin(false);\n      }\n    }\n\n    autoLogin();\n  }, [userLogout]);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      userLogin,\n      userLogout,\n      data,\n      error,\n      loading,\n      login\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/home/lucas/node_projects/dogs-final/src/UserContext.js"],"names":["React","TOKEN_POST","TOKEN_VALIDATE_POST","USER_GET","useNavigate","UserContext","createContext","UserStorage","children","data","setData","useState","login","setLogin","loading","setLoading","error","setError","navigate","userLogout","useCallback","window","localStorage","removeItem","getUser","token","url","options","response","fetch","json","userLogin","username","password","tokenRes","ok","Error","statusText","setItem","err","message","useEffect","autoLogin","getItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from './Api';\nimport { useNavigate } from 'react-router-dom';\n\nexport const UserContext = React.createContext();\n\nexport const UserStorage = ({ children }) => {\n  const [data, setData] = React.useState(null);\n  const [login, setLogin] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const navigate = useNavigate();\n\n  const userLogout = React.useCallback(\n    async function () {\n      setData(null);\n      setError(null);\n      setLoading(false);\n      setLogin(false);\n      window.localStorage.removeItem('token');\n      navigate('/login');\n    },\n    [navigate],\n  );\n\n  async function getUser(token) {\n    const { url, options } = USER_GET(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData(json);\n    setLogin(true);\n  }\n\n  async function userLogin(username, password) {\n    try {\n      setError(null);\n      setLoading(true);\n      const { url, options } = TOKEN_POST({ username, password });\n      const tokenRes = await fetch(url, options);\n      if (!tokenRes.ok) throw new Error(`Error: ${tokenRes.statusText}`);\n      const { token } = await tokenRes.json();\n      window.localStorage.setItem('token', token);\n      await getUser(token);\n      navigate('/conta');\n    } catch (err) {\n      setError(err.message);\n      setLogin(false);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n      if (token) {\n        try {\n          setError(null);\n          setLoading(true);\n          const { url, options } = TOKEN_VALIDATE_POST(token);\n          const response = await fetch(url, options);\n          if (!response.ok) throw new Error('Token inválido');\n          await getUser(token);\n        } catch (err) {\n          userLogout();\n        } finally {\n          setLoading(false);\n        }\n      } else {\n        setLogin(false);\n      }\n    }\n    autoLogin();\n  }, [userLogout]);\n\n  return (\n    <UserContext.Provider\n      value={{ userLogin, userLogout, data, error, loading, login }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}