{"ast":null,"code":"var _jsxFileName = \"/home/lucas/node_projects/dogs-final/src/Components/Login/LoginPasswordReset.js\";\nimport React from 'react';\nimport Input from '../Forms/Input';\nimport Button from '../Forms/Button';\nimport useForm from '../../Hooks/useForm';\nimport useFetch from '../../Hooks/useFetch';\nimport { PASSWORD_RESET } from '../../Api';\nimport Error from '../Helper/Error';\nimport { useNavigate } from 'react-router-dom';\nimport Head from '../Helper/Head';\n\nconst LoginPasswordReset = () => {\n  const [login, setLogin] = React.useState('');\n  const [key, setKey] = React.useState('');\n  const password = useForm();\n  const {\n    error,\n    loading,\n    request\n  } = useFetch();\n  const navigate = useNavigate();\n  React.useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const key = params.get('key');\n    const login = params.get('login');\n    if (key) setKey(key);\n    if (login) setLogin(login);\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (password.validate()) {\n      const {\n        url,\n        options\n      } = PASSWORD_RESET({\n        login,\n        key,\n        password: password.value\n      });\n      const {\n        response\n      } = await request(url, options);\n      if (response.ok) navigate('/login');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"animeLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Head, {\n    title: \"Resete a senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Resete a Senha\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({\n    label: \"Nova Senha\",\n    type: \"password\",\n    name: \"password\"\n  }, password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), loading ? /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Resetando...\") : /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Resetar\")), /*#__PURE__*/React.createElement(Error, {\n    error: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LoginPasswordReset;","map":{"version":3,"sources":["/home/lucas/node_projects/dogs-final/src/Components/Login/LoginPasswordReset.js"],"names":["React","Input","Button","useForm","useFetch","PASSWORD_RESET","Error","useNavigate","Head","LoginPasswordReset","login","setLogin","useState","key","setKey","password","error","loading","request","navigate","useEffect","params","URLSearchParams","window","location","search","get","handleSubmit","event","preventDefault","validate","url","options","value","response","ok"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Input from '../Forms/Input';\nimport Button from '../Forms/Button';\nimport useForm from '../../Hooks/useForm';\nimport useFetch from '../../Hooks/useFetch';\nimport { PASSWORD_RESET } from '../../Api';\nimport Error from '../Helper/Error';\nimport { useNavigate } from 'react-router-dom';\nimport Head from '../Helper/Head';\n\nconst LoginPasswordReset = () => {\n  const [login, setLogin] = React.useState('');\n  const [key, setKey] = React.useState('');\n  const password = useForm();\n  const { error, loading, request } = useFetch();\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n    const key = params.get('key');\n    const login = params.get('login');\n    if (key) setKey(key);\n    if (login) setLogin(login);\n  }, []);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (password.validate()) {\n      const { url, options } = PASSWORD_RESET({\n        login,\n        key,\n        password: password.value,\n      });\n      const { response } = await request(url, options);\n      if (response.ok) navigate('/login');\n    }\n  }\n\n  return (\n    <section className=\"animeLeft\">\n      <Head title=\"Resete a senha\" />\n      <h1 className=\"title\">Resete a Senha</h1>\n      <form onSubmit={handleSubmit}>\n        <Input\n          label=\"Nova Senha\"\n          type=\"password\"\n          name=\"password\"\n          {...password}\n        />\n        {loading ? (\n          <Button disabled>Resetando...</Button>\n        ) : (\n          <Button>Resetar</Button>\n        )}\n      </form>\n      <Error error={error} />\n    </section>\n  );\n};\n\nexport default LoginPasswordReset;\n"]},"metadata":{},"sourceType":"module"}